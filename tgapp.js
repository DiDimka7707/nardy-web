// tgapp.js v13 ‚Äî —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É" –∏ "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è"

// >>> –í–°–¢–ê–í–¨ —Å—é–¥–∞ —Å–≤–æ–π –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ–º–µ–Ω Koyeb <<<
const API_BASE = 'https://<–¢–í–û–ô-–î–û–ú–ï–ù>.koyeb.app'; 
// –ü—Ä–∏–º–µ—Ä: 'https://eldest-gabbey-didimka-team-ba6a197d.koyeb.app'
// –ï—Å–ª–∏ –æ—Å—Ç–∞–≤–∏—à—å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä ‚Äî –∫–æ–¥ —Å–∞–º –Ω–µ —É–≥–∞–¥–∞–µ—Ç. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥—Å—Ç–∞–≤—å!

function base() { return API_BASE; }

async function api(path, opts = {}) {
  const url = `${base()}${path}`;
  const init = {
    method: 'GET',
    headers: {'Content-Type':'application/json'},
    ...opts
  };
  if (init.body && typeof init.body !== 'string') init.body = JSON.stringify(init.body);

  const res = await fetch(url, init);
  let data = null;
  try { data = await res.json(); } catch {}
  if (!res.ok) {
    const msg = (data && (data.detail || data.message)) || `HTTP ${res.status}`;
    const e = new Error(msg); e.status = res.status; e.data = data; throw e;
  }
  return data;
}

function $(s){ return document.querySelector(s); }
function toast(m){ alert(m); }
function setBusy(btn, busy, busyText, normalText){
  if (!btn) return;
  if (!btn.__label) btn.__label = btn.textContent;
  btn.disabled = !!busy;
  btn.textContent = busy ? (busyText || '–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶') : (normalText || btn.__label);
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –ª–∏—Å—Ç–∞ –ø–æ join
function openJoinSheet(){
  const sheet = $('#join-sheet');
  if (sheet) sheet.classList.add('open');
}
function closeJoinSheet(){
  const sheet = $('#join-sheet');
  if (sheet) sheet.classList.remove('open');
}

// –°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É
async function createRoom(btn){
  try {
    setBusy(btn, true, '–°–æ–∑–¥–∞—ë–º‚Ä¶', 'üé≤ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É');
    let data;
    try {
      data = await api('/api/room/create', {method:'POST'});
    } catch(e) {
      if (e.status === 404) data = await api('/api/room', {method:'POST'});
      else throw e;
    }
    const code = (data && (data.code || data.id || data.room)) || '';
    if (!code) throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
    toast(`–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã: ${code}`);
  } catch (e) {
    toast(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É: ${e.message || e}`);
  } finally {
    setBusy(btn, false);
  }
}

// –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –ø–æ –∫–æ–¥—É
async function joinByCode(btn){
  const input = $('#joinCodeInput');
  const raw = (input && input.value || '').trim().toUpperCase();
  if (!raw) return toast('–í–≤–µ–¥–∏ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã');
  try {
    setBusy(btn, true, '–ü—Ä–æ–≤–µ—Ä—è–µ–º‚Ä¶', '–í–æ–π—Ç–∏');
    let data;
    try {
      data = await api(`/api/room/lookup?code=${encodeURIComponent(raw)}`);
    } catch (e) {
      if (e.status === 404) data = await api(`/api/room?code=${encodeURIComponent(raw)}`);
      else throw e;
    }
    toast(`–ö–æ–º–Ω–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞: ${raw}`);
    // TODO: –ø–µ—Ä–µ—Ö–æ–¥ –≤ –∏–≥—Ä—É, –∫–æ–≥–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è —ç–∫—Ä–∞–Ω –∏–≥—Ä—ã
    closeJoinSheet();
  } catch (e) {
    toast(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è: ${e.message || e}`);
  } finally {
    setBusy(btn, false);
  }
}

// –ü—Ä–∏–≤—è–∑–∫–∏ (–∂—ë—Å—Ç–∫–æ –∫ id, –±–µ–∑ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å—Ç–∏–ª–µ–π/–æ–≤–µ—Ä–ª–µ–µ–≤)
function bind(){
  const createBtn = $('#btn-create');
  const openJoin  = $('#btn-join');
  const joinGo    = $('#btn-join-by-code');

  if (createBtn && !createBtn.__bound) {
    createBtn.addEventListener('click', () => createRoom(createBtn));
    createBtn.__bound = true;
  }
  if (openJoin && !openJoin.__bound) {
    openJoin.addEventListener('click', openJoinSheet);
    openJoin.__bound = true;
  }
  if (joinGo && !joinGo.__bound) {
    joinGo.addEventListener('click', () => joinByCode(joinGo));
    joinGo.__bound = true;
  }

  // –ú–∞—Ä–∫–µ—Ä, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç —Ä–µ–∞–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
  document.body.dataset.app = 'ready';
}

// –ù–∞ —Å–ª—É—á–∞–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–æ–∫ ‚Äî —Ä–µ–±–∏–Ω–¥–∏–º
const mo = new MutationObserver(()=>bind());
document.addEventListener('DOMContentLoaded', ()=>{
  bind();
  // –±—ã—Å—Ç—Ä—ã–π –ø–∏–Ω–≥ –±—ç–∫–∞ ‚Äî –µ—Å–ª–∏ —É–ø–∞–¥—ë—Ç, —Å—Ä–∞–∑—É —É–≤–∏–¥–∏–º –∞–ª–µ—Ä—Ç –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º
  api('/health').catch(()=>{ /* –º–æ–ª—á–∏–º, –∫–Ω–æ–ø–∫–∏ —Å–∞–º–∏ –ø–æ–∫–∞–∂—É—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ */ });
});
mo.observe(document.documentElement, {subtree:true, childList:true});
