// tgapp.js v12 ‚Äî –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è "–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É" –∏ "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è"

// 1) –í–°–¢–ê–í–¨ —Å—é–¥–∞ —Å–≤–æ–π –ø—É–±–ª–∏—á–Ω—ã–π URL —Å–µ—Ä–≤–∏—Å–∞ Koyeb (Overview ‚Üí Public URL)
const API_BASE = 'https://<–¢–í–û–ô-–¥–æ–º–µ–Ω>.koyeb.app';

// –ï—Å–ª–∏ –∑–∞–±—É–¥–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å ‚Äî –ø–æ–ø—Ä–æ–±—É–µ–º —É–≥–∞–¥–∞—Ç—å –∏–∑ location.origin
const _apiBase = API_BASE.includes('<–¢–í–û–ô-–¥–æ–º–µ–Ω>') ? null : API_BASE;
function base() {
  return _apiBase || (location.origin.includes('koyeb.app') ? location.origin : API_BASE);
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π fetch —Å JSON/–æ—à–∏–±–∫–∞–º–∏
async function api(path, opts = {}) {
  const url = `${base()}${path}`;
  const init = {
    method: 'GET',
    headers: {'Content-Type': 'application/json'},
    ...opts
  };
  if (init.body && typeof init.body !== 'string') init.body = JSON.stringify(init.body);

  const res = await fetch(url, init);
  let data = null;
  try { data = await res.json(); } catch { /* —Ç–µ–∫—Å—Ç/–ø—É—Å—Ç–æ ‚Äî –æ–∫ */ }
  if (!res.ok) {
    const msg = (data && (data.detail || data.message)) || `HTTP ${res.status}`;
    const err = new Error(msg);
    err.status = res.status;
    err.data = data;
    throw err;
  }
  return data;
}

// UI helpers
function toast(msg){ alert(msg); }
function $(sel){ return document.querySelector(sel); }
function setBusy(btn, busy, textWhenBusy, textNormal){
  if (!btn) return;
  if (!btn.__label) btn.__label = btn.textContent;
  btn.disabled = !!busy;
  btn.textContent = busy ? (textWhenBusy || '–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶') : (textNormal || btn.__label);
}

// ====== –õ–û–ì–ò–ö–ê –ò–ì–†–´ ======

// –°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É: —Å–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è /api/room/create, –µ—Å–ª–∏ 404 ‚Äî /api/room (–æ–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)
async function createRoom(btn){
  try{
    setBusy(btn, true, '–°–æ–∑–¥–∞—ë–º‚Ä¶', 'üé≤ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É');
    let data;
    try {
      data = await api('/api/room/create', {method: 'POST'});
    } catch (e) {
      if (e.status === 404) data = await api('/api/room', {method: 'POST'});
      else throw e;
    }
    const code = (data && (data.code || data.id || data.room)) || '';
    if (!code) throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
    toast(`–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã: ${code}`);
  } catch (e){
    toast(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É: ${e.message || e}`);
  } finally {
    setBusy(btn, false);
  }
}

// –û—Ç–∫—Ä—ã—Ç—å –Ω–∏–∂–Ω—é—é –ø–∞–Ω–µ–ª—å/–ª–∏—Å—Ç –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (–µ—Å–ª–∏ –æ–Ω —É —Ç–µ–±—è –µ—Å—Ç—å)
function openJoinSheet(){
  // –ï—Å–ª–∏ —É —Ç–µ–±—è –º–æ–¥–∞–ª —Å id="join-sheet"
  const sheet = $('#join-sheet');
  if (sheet) sheet.classList.add('open');
  // –ï—Å–ª–∏ –≤–º–µ—Å—Ç–æ –º–æ–¥–∞–ª–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∏ –≤–∫–ª–∞–¥–∫—É
  const joinSection = $('#join-block');
  if (joinSection) joinSection.scrollIntoView({behavior:'smooth', block:'start'});
}

// –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –ø–æ –∫–æ–¥—É (–∏–∑ –ø–æ–ª—è –≤–≤–æ–¥–∞)
async function joinByCode(btn){
  try{
    const input = $('#joinCodeInput, #joinCode, input[name="roomCode"]');
    const raw = (input && input.value || '').trim().toUpperCase();
    if (!raw) return toast('–í–≤–µ–¥–∏ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã');

    setBusy(btn, true, '–ü—Ä–æ–≤–µ—Ä—è–µ–º‚Ä¶', '–í–æ–π—Ç–∏');

    // —Å–Ω–∞—á–∞–ª–∞ /api/room/lookup?code=, –µ—Å–ª–∏ 404 ‚Äî /api/room?code=
    let data;
    try {
      data = await api(`/api/room/lookup?code=${encodeURIComponent(raw)}`);
    } catch (e){
      if (e.status === 404) data = await api(`/api/room?code=${encodeURIComponent(raw)}`);
      else throw e;
    }
    // —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —É—Å–ø–µ—Ö, –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª—Å—è –æ–±—ä–µ–∫—Ç/—Å—Ç—Ä–æ–∫–∞ –±–µ–∑ –æ—à–∏–±–∫–∏
    toast(`–ö–æ–º–Ω–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞: ${raw}`);
    // —Ç—É—Ç –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–∞–º—É –∏–≥—Ä—É, –∫–æ–≥–¥–∞ –æ–Ω–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞
  } catch (e){
    toast(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è: ${e.message || e}`);
  } finally {
    setBusy(btn, false);
  }
}

// ====== –ü–†–ò–í–Ø–ó–ö–ê –ö–ù–û–ü–û–ö (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ) ======
function initButtons(){
  document.addEventListener('click', (e)=>{
    const b = e.target.closest('button');
    if (!b) return;
    const id = (b.id || '').toLowerCase();

    // –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ id, —á—Ç–æ–±—ã –Ω–µ –ª–∞–∑–∏—Ç—å –≤ –≤—ë—Ä—Å—Ç–∫—É
    if (['btn-create','creategamebtn','create_game_btn'].includes(id)) {
      e.preventDefault(); createRoom(b); return;
    }
    if (['btn-join','joinopenbtn','openjoinbtn','join_btn'].includes(id)) {
      e.preventDefault(); openJoinSheet(); return;
    }
    if (['btn-join-by-code','joingo','joingobtn','join_by_code_btn'].includes(id)) {
      e.preventDefault(); joinByCode(b); return;
    }
  });
}

// –ù–∞ –≤—Å—è–∫–∏–π ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–µ–µ –ø–æ–π–º–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –±—ç–∫–µ–Ω–¥–æ–º
async function quickHealthPing(){
  try { await api('/health'); } catch(e){
    console.warn('Health check failed:', e);
  }
}

document.addEventListener('DOMContentLoaded', ()=>{
  initButtons();
  quickHealthPing();
});
