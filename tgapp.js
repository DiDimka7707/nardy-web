// ====== –ù–ê–°–¢–†–û–ô–ö–ò API ======
const API_BASE = 'https://eldest-gabbey-didimka-team-ba6a197d.koyeb.app'; // —Ç–≤–æ–π Koyeb

// ====== –£–¢–ò–õ–ò–¢–´ ======
const $ = (sel) => document.querySelector(sel);
const byId = (id) => document.getElementById(id);

function toast(msg){ alert(msg); } // –ø—Ä–æ—Å—Ç–æ–π –∞–ª–µ—Ä—Ç; –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –∑–∞–º–µ–Ω–∏–º –Ω–∞ –∫—Ä–∞—Å–∏–≤–æ

function setVisible(el, v){
  if (!el) return;
  el.style.display = v ? '' : 'none';
}

// ====== –í–ö–õ–ê–î–ö–ò ======
function showScreen(name){
  ['profile','games','themes'].forEach(n=>{
    const scr = byId(`screen-${n}`);
    const tab = document.querySelector(`.tab[data-tab="${n}"]`);
    if (scr) scr.classList.toggle('active', n===name);
    if (tab) tab.classList.toggle('active', n===name);
  });
}

function bindTabs(){
  document.querySelectorAll('.tab').forEach(btn=>{
    btn.addEventListener('click', ()=> showScreen(btn.dataset.tab));
  });
}

// ====== –ü–†–û–§–ò–õ–¨ ======
const LS = {
  name: 'nardy_name',
  nick: 'nardy_nick',
  birth: 'nardy_birth',
};

function loadProfile(){
  const name = localStorage.getItem(LS.name) || '';
  const nick = localStorage.getItem(LS.nick) || '';
  const birth = localStorage.getItem(LS.birth) || '';
  byId('in-name').value = name;
  byId('in-nick').value = nick;
  if (birth) byId('in-birth').value = birth;
}

function saveProfile(){
  const name = byId('in-name').value.trim();
  const nick = byId('in-nick').value.trim();
  const birth = byId('in-birth').value;
  localStorage.setItem(LS.name, name);
  localStorage.setItem(LS.nick, nick);
  localStorage.setItem(LS.birth, birth || '');
  toast('–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω ‚úÖ');
}

// ====== JOIN SHEET ======
function openJoinSheet(open){
  const back = byId('join-backdrop');
  const sheet = byId('join-sheet');
  if (open){
    setVisible(back,true);
    back.style.display = 'block';
    sheet.classList.add('open');
  } else {
    setVisible(back,false);
    sheet.classList.remove('open');
  }
}

// ====== API –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï ======
async function apiCreateRoom(){
  const r = await fetch(`${API_BASE}/api/rooms/create`, { method:'POST' });
  if (!r.ok) throw new Error(`HTTP ${r.status}`);
  return r.json();
}
async function apiGetRoom(code){
  const r = await fetch(`${API_BASE}/api/rooms/${encodeURIComponent(code)}`);
  if (!r.ok) throw new Error(`HTTP ${r.status}`);
  return r.json();
}

// ====== BIND UI ======
function bindUI(){
  // –ø—Ä–æ—Ñ–∏–ª—å
  byId('btn-save-profile')?.addEventListener('click', saveProfile);

  // –∏–≥—Ä—ã
  byId('btn-create-game')?.addEventListener('click', async (ev)=>{
    const btn = ev.currentTarget;
    try{
      btn.disabled = true; btn.textContent = '–°–æ–∑–¥–∞—ë–º...';
      const data = await apiCreateRoom();
      toast(`–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã: ${data.code}`);
      // —Ç—É—Ç –ø–æ–∑–∂–µ ‚Äî –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –∏–≥—Ä—ã
    }catch(e){
      toast(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É: ${e.message}`);
    }finally{
      btn.disabled = false; btn.textContent = 'üé≤ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É';
    }
  });

  byId('btn-open-join')?.addEventListener('click', ()=> openJoinSheet(true));
  byId('btn-close-join')?.addEventListener('click', ()=> openJoinSheet(false));
  byId('join-backdrop')?.addEventListener('click', ()=> openJoinSheet(false));

  byId('btn-join-by-code')?.addEventListener('click', async ()=>{
    const code = (byId('join-code-input').value || '').trim();
    if (!code){ toast('–í–≤–µ–¥–∏ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã'); return; }
    try{
      const data = await apiGetRoom(code);
      toast(`–ö–æ–º–Ω–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞: ${data.code}`);
      // —Ç—É—Ç –ø–æ–∑–∂–µ ‚Äî –≤—Ö–æ–¥ –≤ –∫–æ–º–Ω–∞—Ç—É/—ç–∫—Ä–∞–Ω –æ–∂–∏–¥–∞–Ω–∏—è
      openJoinSheet(false);
    }catch(e){
      toast(`–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏: ${e.message}`);
    }
  });

  byId('btn-quick-match')?.addEventListener('click', ()=>{
    toast('–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º –±—ã—Å—Ç—Ä—ã–π –º–∞—Ç—á üîú');
  });
}

// ====== –ò–ù–ò–¶ ======
document.addEventListener('DOMContentLoaded', async ()=>{
  bindTabs();
  bindUI();
  loadProfile();

  // –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API, —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –±—ã–ª–æ —è—Å–Ω–æ –µ—Å–ª–∏ –¥–æ–º–µ–Ω –Ω–µ —Ç–æ—Ç
  try{
    const r = await fetch(`${API_BASE}/health`);
    if (!r.ok){ console.warn('health not ok', r.status); }
  }catch(e){
    console.warn('health error', e);
    toast('‚ö†Ô∏è –ù–µ –º–æ–≥—É –¥–æ—Å—Ç—É—á–∞—Ç—å—Å—è –¥–æ API. –ü—Ä–æ–≤–µ—Ä—å –¥–æ–º–µ–Ω –≤ tgapp.js (API_BASE).');
  }
});
